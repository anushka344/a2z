//bubble sort 

#include <iostream>
using namespace std;
void bubble_sort(int arr[],int n)
{
    int i,j;
  //sort
    for (int i=0;i<n-1;i++)
    {
        for (int j=0;j<n-i-1;j++)
        {
            if (arr[j]>arr[j+1])
            {
                int temp=arr[j];
                arr[j]=arr[j+1];
                arr[j+1]=temp;

            }
        }
    }
    //print
     for(int i=0;i<6;i++)
    {
        cout<<arr[i]<<" ";
    }

}
int main() {
    int arr[] = {13,46,24,52,20,9};
    cout<<"Before Using Bubble Sort: "<<endl;
    for(int i=0;i<6;i++)
    {
        cout<<arr[i]<<" ";
    }
    cout<<endl;
    int n = sizeof(arr) / sizeof(arr[0]);
    bubble_sort(arr, n);
    return 0;
}
//insertion sort

#include <iostream>
using namespace std;
void insertion_sort(int arr[],int n)
{
    int i,j;
  //sort
    for(int i=1;i<n;i++)
    {
        int curr=arr[i];
        j=i-1;
        while (j>=0 && arr[j]>curr)
        {
            arr[j+1]=arr[j];
            j--;
        }
        arr[j+1]=curr;
    } 
    //print
     for(int i=0;i<6;i++)
    {
        cout<<arr[i]<<" ";
    }

}
int main() {
    int arr[] = {13,46,24,52,20,9};
    cout<<"Before Using insertion  Sort: "<<endl;
    for(int i=0;i<6;i++)
    {
        cout<<arr[i]<<" ";
    }
    cout<<endl;
    int n = sizeof(arr) / sizeof(arr[0]);
    insertion_sort(arr, n);
    return 0;
}
//selection sort

#include <iostream>
using namespace std;
void selection_sort(int arr[],int n)
{
    int i,j;
  //sort
    for (int i=0;i<n-1;i++)
    {
        int mini=i;
        for (int j=i+1;j<n;j++)
        {
            if (arr[j]<arr[mini])
                mini=j;

        }
        int temp = arr[mini];
    arr[mini] = arr[i];
    arr[i] = temp;

    }
    //print
     for(int i=0;i<6;i++)
    {
        cout<<arr[i]<<" ";
    }

}
int main() {
    int arr[] = {13,46,24,52,20,9};
    cout<<"Before Using selection Sort: "<<endl;
    for(int i=0;i<6;i++)
    {
        cout<<arr[i]<<" ";
    }
    cout<<endl;
    int n = sizeof(arr) / sizeof(arr[0]);
    selection_sort(arr, n);
    return 0;
}
